#!/bin/bash

# Inicializa la variable para la opción

rojo='\033[0;31m'
verde='\033[0;32m'
amarillo='\033[0;33m'
azul='\033[0;34m'

greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

sudo nmcli radio wifi on

#HELP
function activeH {
	sudo clear
	less -F README.md
	echo " "
	exit 0
	
}

#USA LA OPCION I
function activeI {
		
		# Restablece la interfaz WiFi
	
		sudo clear
		echo -e "$turquoiseColour"
		interfaz=$(sudo iw dev | grep 'Interface' | awk '{print$2}')
		interfaz2=$(sudo iw dev | grep 'type' | awk '{print$2}')
		if [ "$interfaz2" == "m" ]; then
		
			echo -e "${azul}"
			echo -e "                        *****************************************************${azul}"
			echo -e "                        * GitHub @ MklMP      📶️       GESTOR DE INTERFACES *${azul}"
			echo -e "                        *****************************************************${verde}"
			echo -e "                        ***************************** CURRENT MODE: Manager *${verde}"
			echo -e "                        *****************************************************${amarillo}"
			echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
			echo -e "                        *****************************************************${verde}"

			sleep 2
			echo " "
			echo "			La Interfaz de Red Ya se encuentra en modo Manager!!"
			echo " "
			echo "			Exiting..."
			sleep 1
			exit 0
			
		else
		
			echo -e "${azul}"
			echo -e "                        *****************************************************${azul}"
			echo -e "                        * GitHub @ MklMP      📶️       GESTOR DE INTERFACES *${azul}"
			echo -e "                        *****************************************************${rojo}"
			echo -e "                        ***************************** CURRENT MODE: Monitor *${rojo}"
			echo -e "                        *****************************************************${amarillo}"
			echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
			echo -e "                        *****************************************************${verde}"
			echo -e "\n			Restableciendo la Interfaz Wifi (Monitor To Manager):"

			
			sudo ifconfig $interfaz down 2>/dev/null; sleep 1
	        sudo iwconfig $interfaz mode monitor 2>/dev/null; sleep 1
	        sudo ifconfig $interfaz up 2>/dev/null; 
	        sudo systemctl restart NetworkManager
	
			sleep 1
			echo "			[+]Interfaz como nueva!!"
			echo " "
			echo "			Exiting..."
			sleep 1
			exit 0
		fi
}

#USA la opcion de C
function activeC {
#Borrar Cache
	
	sudo clear
	
	echo -e "${azul}"
	echo -e "                        *****************************************************${azul}"
	echo -e "                        * GitHub @ MklMP     🗑️       HISTORIAL DEL CACHE   *${azul}"
	echo -e "                        *****************************************************${amarillo}"
	echo -e "                        ************************* CURRENT STATUS: VERIFYING *${azul}"
	echo -e "                        *****************************************************${azul}"
	echo -e "                        * DDos-Network      v2.1                       2024 *${azul}"
	echo -e "                        *****************************************************${rojo}"
	sleep 2
	sudo ls -A DDos_Network > /dev/null 2>&1
					
	
	if [ $? = 2  ]; then
		
		echo " "
		echo "			NO SE PUDO ACCEDER AL DIRECTORIO ESPECIFICADO"
		echo -e "\n			MOTIVO: EL DIRECTORIO DE CACHE NO EXISTE !!!"
		echo " "
		exit 1
	else
	
	
		if [ -z "$(ls -A DDos_Network)" ]; then
		
			sudo clear
			echo -e "${azul}"
			echo -e "                        *****************************************************${azul}"
			echo -e "                        * GitHub @ MklMP     🗑️       HISTORIAL DEL CACHE   *${azul}"
			echo -e "                        *****************************************************${verde}"
			echo -e "                        ***************************** CURRENT STATUS: EMPTY *${verde}"
			echo -e "                        *****************************************************${amarillo}"
			echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
			echo -e "                        *****************************************************${verde}"
			sleep 2
			echo -e "$turquoiseColour"
			echo -e "\n\n				STATUS CACHE: EMPTY !!!!"
			echo -e "\n\n				Nothing to delete !!!!"
			echo -e "\n\n				Exiting !!!!"
			sleep 2
			echo " "
			exit 0
		else
		
			sudo clear
			echo -e "${azul}"
			echo -e "                        *****************************************************${azul}"
			echo -e "                        * GitHub @ MklMP     🗑️       HISTORIAL DEL CACHE   *${azul}"
			echo -e "                        *****************************************************${rojo}"
			echo -e "                        ****************************** CURRENT STATUS: BUSY *${rojo}"
			echo -e "                        *****************************************************${amarillo}"
			echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
			echo -e "                        *****************************************************${rojo}"
			
			sleep 2
			echo -e "\n\n				STATUS CACHE: BUSY !!!!"
			echo -e "$amarillo"
			ls DDos_Network --color=always | column -t
			echo " "
			echo -e "$turquoiseColour"
			echo "			[?]Desea Borrar el Historial Completo o no? "
			read -p "			[!]( 'no' ) Conserva los archivos '.cap' (yes/no) : " respuesta2
					
			if [ $respuesta2 = 'yes' ]; then
			
				echo "$verde"
				
				rm -f DDos_Network/*.netxml 
				rm -f DDos_Network/*.csv 
				rm -f DDos_Network/*.cap
				
					
				sudo clear
				echo -e "${azul}"
				echo -e "                        *****************************************************${azul}"
				echo -e "                        * GitHub @ MklMP     🗑️       HISTORIAL DEL CACHE   *${azul}"
				echo -e "                        *****************************************************${verde}"
				echo -e "                        ***************************** CURRENT STATUS: EMPTY *${verde}"
				echo -e "                        *****************************************************${amarillo}"
				echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
				echo -e "                        *****************************************************${verde}"
				sleep 2
				echo -e "$turquoiseColour"
				echo -e "\n\n				STATUS CACHE: EMPTY !!!!"
				
				echo "			[-]HISTORIAL BORRADO EXITOSAMENTE!"
				echo "			Gracias por Usar !"
				echo "			BYE.."
				sleep 1
				echo "				BYE..BYE"
				echo " "
				exit 0
				
			elif [ $respuesta2 = 'no' ]; then
			
				echo "$verde"
				rm -f DDos_Network/*.netxml 
				rm -f DDos_Network/*.csv 
				
				sudo clear
				echo -e "${azul}"
				echo -e "                        *****************************************************${azul}"
				echo -e "                        * GitHub @ MklMP     🗑️       HISTORIAL DEL CACHE   *${azul}"
				echo -e "                        *****************************************************${verde}"
				echo -e "                        *****************  CURRENT STATUS: .cap FILES SAVED *${verde}"
				echo -e "                        *****************************************************${amarillo}"
				echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
				echo -e "                        *****************************************************${verde}"
				sleep 2
				echo -e "$turquoiseColour"
				echo -e "\n\n			STATUS CACHE: We've Saved several .cap files !!!!"
				
				echo "			[-]HISTORIAL BORRADO EXITOSAMENTE!"
				echo "			[+]Conservaste los archivos .cap, contenedores de EAPOL(Key)!"
				echo "			BYE.."
				sleep 1
				echo "				BYE..BYE"
				echo " "
				exit 0
				
			else 	
				echo -e "$rojo"
				echo "			Entrada Invalida"
				echo "			Exiting..."
				sleep 2
				exit 1
				
			fi
					
			
			
			
		fi
		
	fi
	
	
}
 
function activeP()
{	


	sudo clear

	echo -e "$turquoiseColour"
	wc PasswordsFound.txt | awk '{print$1}' > linetemp.txt

	line=$(<linetemp.txt)
	linemine=$((line-3))
	
	echo -e "${azul}"
	echo -e "                        *****************************************************${azul}"
	echo -e "                        * GitHub @ MklMP          📋️       SAVED PROFILES   *${azul}"
	echo -e "                        *****************************************************${verde}"
	echo -e "                        ********************************* CURRENT NUMBER: $linemine *${verde}"
	echo -e "                        *****************************************************${amarillo}"
	echo -e "                        * DDos-Network      v2.1                       2024 *${amarillo}"
	echo -e "                        *****************************************************${verde}"
	sleep 1
	cat PasswordsFound.txt
	echo " "
	sleep 0.5
	echo "That's All.."
	sleep 1
	exit 0
	
}
###############################################################################################
#########################################################################################################

# Procesa las opciones
while getopts "cihp" opt; do
  case $opt in
     
    h)
      echo -e "$turquoiseColour"
	activeH
	;;
	
	
    c)
	activeC
    	;;
    	
    i)
	activeI
    	;;
    	
    p)
    	
	activeP
    	;;
    	
    *)
	echo "Opción inválida: -$OPTARG no existe, ignorada" >&2
	exit 1
	;;
	
  esac
done

banner () {

echo -e "\e[1;93m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                    ║
║                 ██████╗ ██████╗  ██████╗ ██████           ███╗░░██╗ ███████╗████████╗██╗        ██╗ ██████╗ ██████╗ ██╗  ██╗       ║
║                 ██╔══██╗██╔══██╗██╔═══██╗██╔═══╗          ████╗░██║ ██╔════╝╚══██╔══╝██║        ██║██╔═══██╗██╔══██╗██║ ██╔╝       ║
║                 ██║  ██║██║  ██║██║   ██║██████║  ██████  ██║██╗██║ █████╗░░   ██║   ██║░░███║░░██║██║   ██║██████╔╝█████╔╝        ║
║                 ██║  ██║██║  ██║██║   ██║    ██║  ╚════╝  ██║░╚███║ ██╔══╝░░   ██║   ╚████░░░████╔╝██║   ██║██╔══██╗██╔═██╗        ║
║                 ██████╔╝██████╔╝╚██████╔╝██████║          ██║░░╚██║ ███████╗   ██║    ╚██║░░░░██╔╝ ╚██████╔╝██║░░██║██║  ██╗       ║
║                 ╚═════╝ ╚═════╝  ╚═════╝ ╚═════╝          ╚═╝   ╚═╝ ╚══════╝   ╚═╝     ╚═╝    ╚═╝   ╚═════╝ ╚═╝░░╚═╝╚═╝  ╚═╝       ║
║                                                                                                                                    ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
 ════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
\e[0m"
echo -e "\e║\t\t\t\t			Made in Bash by \e[1;91mMklMP\e[0m"
}


menu () {

echo -e "\e[1;93m
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                               SELECT ONE OF THESE OPTION                                      (>_-)..{Hi $USER}   ║
║                                         ____________________________________                                                       ║
║                                       ╔══════════════════════════════════════════╗                                                 ║
║                                       ║                                          ║                                                 ║
║                                       ║       1. DDOS_WIFI                       ║                                                 ║
║                                       ║       2. DDOS_BLUETOOTH                  ║                                                 ║
║                                       ║       3. FAKE_AP                         ║                                                 ║ 
║                                       ║                                          ║                                                 ║     
║                                       ║       4. HELP                            ║                                                 ║
║                                       ║       5. EXIT                            ║                                                 ║
║                                       ║                                          ║                                                 ║
║                                       ╚══════════════════════════════════════════╝                                                 ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝									
\e[0m"
echo -ne "${yellowColour}           					OPTION : ${greenColour}" && read -r option
}

while true; do
			
	sudo clear
	banner
	menu

	case $option in
		
		1)
		sudo ./$pwd/DDos_Wifi.sh
		exit 50
		;;
		
		
		2)
		sudo ./$pwd/DDos_Bluetooth.sh
		exit 50
		;;
		
		
		3)
		sudo ./$pwd/FAP.sh
		exit 50
		;;
		
			
		4)
		sudo less -F ./$pwd/README.md
		exit 50
		;;
		
		5)
		echo "Exiting..."
		sleep 1
		exit 0
		;;
			
		*)
		echo -e "$rojo"
		echo "Opción inválida: -$OPTARG no existe, ignorada" >&2
		sleep 2
		
		;;
		
	esac
done
